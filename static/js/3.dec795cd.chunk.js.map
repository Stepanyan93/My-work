{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/MyPost/MyPost.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfoUser/ProfileInfoUser.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","ProfileStatusWithHook","props","useState","editMode","setEditMode","profileStatus","status","setStatus","useEffect","onClick","className","type","onChange","e","currentTarget","autoFocus","onBlur","setuserprofilestatus","ContactsUser","keyContact","valueContact","style","contactItems","ProfileInfoUserReduxForm","reduxForm","form","onSubmit","handleSubmit","formItem","error","s","errorGroup","Field","component","Input","placeholder","name","Textarea","id","htmlFor","keys","setProfileInfo","contacts","map","key","infoButton","ProfileInfoUser","userId","boolId","authUserId","editOnValue","setEditOn","isAuth","formData","setProfileInfoUser","then","infoItems","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","entries","ProfileInfo","src","alt","profileImg","container","containerItem","leftItem","photos","large","UserDefaultPhoto","isOwner","uploadPhotoCreator","target","files","customFileInput","rightItem","Preloader","Post","post","message","like","maxLength50","MaxLengthCreator","OnAddPostReduxForm","validate","required","MyPost","React","memo","myPostElement","profilePage","postData","likeCount","myPost","addNewPostActionCreator","addNewPost","MyPostContainer","connect","state","Profile","profile","match","params","ProfileContainer","refreshProfile","history","setuserprofileinfo","getuserprofilestatus","this","prevProps","prevState","snapshot","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.dec795cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__2vguN\",\"profileImg\":\"ProfileInfo_profileImg__3FVDm\",\"containerItem\":\"ProfileInfo_containerItem__2i1fo\",\"leftItem\":\"ProfileInfo_leftItem__yO436\",\"rightItem\":\"ProfileInfo_rightItem__11bPx\",\"infoItems\":\"ProfileInfo_infoItems__1gNkU\",\"contactItems\":\"ProfileInfo_contactItems__3ptq2\",\"infoButton\":\"ProfileInfo_infoButton__qZPrP\",\"formItem\":\"ProfileInfo_formItem__8jHjR\",\"customFileInput\":\"ProfileInfo_customFileInput__e3fP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__36LR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__8dz23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"MyPost_myPost__1_Dq2\",\"myPostAdd\":\"MyPost_myPostAdd__3TxVI\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React,{useState,useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n        let [editMode,setEditMode] = useState(false);\r\n        let [status,setStatus] = useState(props.profileStatus);\r\n\r\n        useEffect(() => {\r\n            setStatus(props.profileStatus)\r\n        },[props.profileStatus]);\r\n\r\n        let activateChangeStatus = () => {\r\n            setEditMode(true);\r\n        };\r\n        let deactivateChangeStatus = () => {\r\n            setEditMode(false);\r\n            props.setuserprofilestatus(status)\r\n        };\r\n        let onChangeStatus = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onClick={activateChangeStatus} className={\"alert alert-primary\"}>{props.profileStatus || '---------'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input type=\"text\" onChange={onChangeStatus}  autoFocus={true}  onBlur={deactivateChangeStatus} value={status} className={\"form-control form-control-lg\"} />\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHook;","import React,{useState} from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../common/FormControls/FormControls\";\r\nimport s from './../../../common/FormControls/FormControls.module.css'\r\nimport style from './../ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileInfoUser = (props) => {\r\n    let userId = props.setProfileInfo.userId;\r\n    let boolId = props.authUserId === userId;\r\n\r\n    let [editOnValue,setEditOn] = useState(false);\r\n\r\n    let onSubmit = (formData) => {\r\n        props.setProfileInfoUser(formData).then(() => {setEditOn(false)})\r\n    };\r\n    let editOn = () => {\r\n        setEditOn(true);\r\n    };\r\n    return(\r\n\r\n        <div>\r\n            {props.isAuth && boolId && editOnValue===false &&\r\n            <div>\r\n                <button onClick={editOn} className={style.infoButton}>Edit</button>\r\n            </div>\r\n            }\r\n            {editOnValue &&\r\n            <ProfileInfoUserReduxForm setProfileInfo={props.setProfileInfo} onSubmit={onSubmit}/>\r\n            }\r\n            {!editOnValue &&\r\n            <div className={style.infoItems}>\r\n                <p><b>Full Name :</b>{props.setProfileInfo.fullName}</p>\r\n                <p><b>About me :</b>{props.setProfileInfo.aboutMe}</p>\r\n                <p><b>Looking For A Job :</b>{props.setProfileInfo.lookingForAJob ? 'Yes' : 'No'}</p>\r\n                <p><b>Profesional Kills :</b>{props.setProfileInfo.lookingForAJobDescription}</p>\r\n                <h4>Contacts</h4> {Object.entries(props.setProfileInfo.contacts).map(([key,value]) =>  <ContactsUser keyContact={key} valueContact={value}/>)}\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nconst ContactsUser = ({keyContact,valueContact}) => {\r\n    return (\r\n        <div className={style.contactItems}>\r\n            <b>{keyContact} :</b> <span>{valueContact}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileInfoUserForm = (props) => {\r\n  return(\r\n      <form onSubmit={props.handleSubmit} className={style.formItem}>\r\n          {props.error &&\r\n          <div className={s.errorGroup}>\r\n              {props.error}\r\n          </div>\r\n          }\r\n          <div className={\"form-group\"}>\r\n              <b>Full Name :</b><Field component={Input} placeholder={'Full Name'} name={'fullName'} className={\"form-control\"} />\r\n          </div>\r\n          <div className={\"form-group\"}>\r\n              <b>About me :</b><Field component={Textarea} placeholder={'About Me'} name={'aboutMe'} className={\"form-control\"}/>\r\n          </div>\r\n          <div className={\"form-group\"}>\r\n              <b>Looking For A Job :</b>\r\n              <div className={\"custom-control custom-radio\"}>\r\n                  <Field component={'input'} type={'radio'} id={\"customRadio1\"} name={'lookingForAJob'}  value={'true'} className={\"custom-control-input\"}/>\r\n                  <label className=\"custom-control-label\" htmlFor=\"customRadio1\">Yes</label>\r\n              </div>\r\n              <div className={\"custom-control custom-radio\"}>\r\n                  <Field component={'input'} type={'radio'} id={\"customRadio2\"} name={'lookingForAJob'} value={'false'} className={\"custom-control-input\"}/>\r\n                  <label className=\"custom-control-label\" htmlFor=\"customRadio2\">No</label>\r\n              </div>\r\n          </div>\r\n          <div className={\"form-group\"}>\r\n              <b>Profesional Kills :</b><Field component={Textarea} placeholder={'Profesional Kills'} name={'lookingForAJobDescription'} className={\"form-control\"}/>\r\n          </div>\r\n          <div className={\"form-group\"}>\r\n              <b>Contacts</b> {Object.keys(props.setProfileInfo.contacts).map(key =>  <ContactsUser key={key} keyContact={key} valueContact={<Field component={Input} placeholder={key} name={'contacts.'+key} className={\"form-control\"} />}/>)}\r\n          </div>\r\n          <div>\r\n              <button className={style.infoButton}>Change</button>\r\n          </div>\r\n      </form>\r\n  )\r\n};\r\nconst ProfileInfoUserReduxForm = reduxForm({form:'profileUserInfo'})(ProfileInfoUserForm);\r\n\r\nexport default ProfileInfoUser;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHook from \"./ProfileStatus/ProfileStatusWithHook\";\r\nimport ProfileInfoUser from \"./ProfileInfoUser/ProfileInfoUser\";\r\nimport UserDefaultPhoto from './../../../assets/img/user.png';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let onUploadPhoto = (e) => {\r\n        props.uploadPhotoCreator(e.target.files[0]);\r\n    };\r\n\r\n    if (!props.setProfileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"http://dgdesign.ru/uploads/posts/2018-04/1524225588_shapka-sayta-informatika-253742446445.jpg\" alt=\"\" className={s.profileImg}/>\r\n                <div className={s.container}>\r\n                    <div className={s.containerItem}>\r\n                        <div className={s.leftItem}>\r\n                            <div>\r\n                                <img src={props.setProfileInfo.photos.large || UserDefaultPhoto} alt=\"\"/>\r\n                            </div>\r\n                            <div>\r\n                                {!props.isOwner &&\r\n                                <input type=\"file\" onChange={onUploadPhoto} className={s.customFileInput}/>}\r\n                            </div>\r\n                        </div>\r\n                        <div >\r\n                            <ProfileStatusWithHook profileStatus={props.profileStatus} setuserprofilestatus={props.setuserprofilestatus}/>\r\n                        </div>\r\n                    </div >\r\n                    <div className={s.containerItem}>\r\n                        <div className={s.rightItem}>\r\n                            <ProfileInfoUser setProfileInfoUser={props.setProfileInfoUser} authUserId={props.authUserId} isAuth={props.isAuth} setProfileInfo={props.setProfileInfo}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\" alt=\"\"/>\r\n            <p>{props.message}</p>\r\n            <div>\r\n                <button className={\"btn btn-primary\"}>Like <span className={\"badge badge-light\"}>{props.like}</span></button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport s from './MyPost.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nlet maxLength50 = MaxLengthCreator(50);\r\n\r\nconst OnAddPostForm = (props) => {\r\n  return(\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component={Textarea} validate={[required,maxLength50]} name={'addNewPost'} className={\"form-control\"}/>\r\n          </div>\r\n          <div>\r\n              <button className={\"btn btn-outline-secondary\"}>Add Post</button>\r\n          </div>\r\n      </form>\r\n  )\r\n};\r\n\r\nconst OnAddPostReduxForm = reduxForm({form:'addNewPost'})(OnAddPostForm);\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let myPostElement = props.profilePage.postData.map(post => <Post message={post.message} like={post.likeCount}/>);\r\n\r\n    let onAddPost = (value) => {\r\n        props.addNewPostActionCreator(value.addNewPost);\r\n        value.addNewPost = '';\r\n    };\r\n\r\n    return (\r\n        <div className={s.myPost}>\r\n            <OnAddPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {myPostElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\nexport default MyPost;","import React from 'react';\r\nimport {addNewPostActionCreator} from \"../../../redux/profile_reduser\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      profilePage: state.profilePage\r\n  }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps,{addNewPostActionCreator})(MyPost);\r\nexport default MyPostContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo isOwner={props.match.params.userId} setProfileInfoUser={props.setProfileInfoUser} authUserId={props.authUserId} isAuth={props.isAuth} setProfileInfo={props.setProfileInfo} profileStatus={props.profileStatus} setuserprofilestatus={props.setuserprofilestatus} uploadPhotoCreator={props.uploadPhotoCreator}/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    setuserprofileinfo,\r\n    getuserprofilestatus,\r\n    setuserprofilestatus,\r\n    setProfileInfoUser, uploadPhotoCreator\r\n} from \"../../redux/profile_reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.setuserprofileinfo(userId);\r\n        this.props.getuserprofilestatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={this.props.match.params.userId} setProfileInfoUser={this.props.setProfileInfoUser}\r\n                     authUserId={this.props.authUserId} isAuth={this.props.isAuth}\r\n                     setProfileInfo={this.props.setProfileInfo} profileStatus={this.props.profileStatus}\r\n                     setuserprofilestatus={this.props.setuserprofilestatus}\r\n                     uploadPhotoCreator={this.props.uploadPhotoCreator}/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        setProfileInfo: state.profilePage.setProfileInfo,\r\n        profileStatus: state.profilePage.profileStatus,\r\n        authUserId: state.auth.id\r\n\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {setuserprofileinfo, getuserprofilestatus, setuserprofilestatus, setProfileInfoUser,uploadPhotoCreator}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}